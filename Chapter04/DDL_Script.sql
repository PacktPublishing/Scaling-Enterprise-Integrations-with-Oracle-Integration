CREATE TABLE "ADMIN"."EMPLOYEEDETAILS" 
   (	"ID" NUMBER, 
	"EMPLOYEEID" VARCHAR2(20 BYTE) COLLATE "USING_NLS_COMP", 
	"FIRSTNAME" VARCHAR2(200 BYTE) COLLATE "USING_NLS_COMP", 
	"LASTNAME" VARCHAR2(200 BYTE) COLLATE "USING_NLS_COMP", 
	"DOB" DATE, 
	"DOJ" DATE, 
	"CONTACTNUMBER" VARCHAR2(20 BYTE) COLLATE "USING_NLS_COMP", 
	"MARRIED" VARCHAR2(20 BYTE) COLLATE "USING_NLS_COMP", 
	"SEX" VARCHAR2(20 BYTE) COLLATE "USING_NLS_COMP", 
	"EMPLOYEETYPE" VARCHAR2(20 BYTE) COLLATE "USING_NLS_COMP", 
	"CREATEDATE" DATE, 
	"UPDATEDATE" DATE, 
	"STATUS" VARCHAR2(20 BYTE) COLLATE "USING_NLS_COMP", 
	"ERRORDETAILS" VARCHAR2(4000 BYTE) COLLATE "USING_NLS_COMP", 
	"EMAILADDRESS" VARCHAR2(200 BYTE) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" ;

CREATE UNIQUE INDEX "ADMIN"."EMPLOYEEDETAILS_PK" ON "ADMIN"."EMPLOYEEDETAILS" ("ID") 
  ;

ALTER TABLE "ADMIN"."EMPLOYEEDETAILS" ADD CONSTRAINT "EMPLOYEEDETAILS_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "ADMIN"."EMPLOYEE_TRIGGER" 
BEFORE INSERT ON EMPLOYEEDETAILS
FOR EACH ROW
    WHEN (new.ID IS NULL) BEGIN
  :new.ID := EMPLOYEE_SEQUENCE.NEXTVAL;
END;
/
ALTER TRIGGER "ADMIN"."EMPLOYEE_TRIGGER" ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "ADMIN"."CREATED_AT_TRIGGER" 
BEFORE INSERT ON EMPLOYEEDETAILS
FOR EACH ROW
BEGIN
    :NEW.CREATEDATE := SYSDATE;
END;
/
ALTER TRIGGER "ADMIN"."CREATED_AT_TRIGGER" ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "ADMIN"."UPDATED_AT_TRIGGER" 
before update or insert on EMPLOYEEDETAILS
for each row
begin
 :new.UPDATEDATE := sysdate;
end;
/
ALTER TRIGGER "ADMIN"."UPDATED_AT_TRIGGER" ENABLE;